name: Push Verification Pipeline

on:
  push:
    branches:
      - "*"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install

  commitlint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run commitlint
        run: |
          # Extract the latest commit message
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          # Check the commit message
          echo "$LAST_COMMIT_MESSAGE" | npx commitlint
  lint:
    runs-on: ubuntu-latest
    needs: [setup, commitlint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: npm install
      - name: Run linter
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [setup, lint]
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    env: 
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: npm install
      
      - name: Set up Prisma
        run: npx prisma migrate dev
      - name: Filling the database with the seeds
        run: npm run db:seed

      - name: Build application
        run: npm run build
